@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<DolphinFx.Models.ApplicationDetails>

@{
    ViewData["Title"] = "Index";
}

<style>
    /*pagination*/
    .pg {
        margin-top: 40px;
    }

    .pagination {

        display: flex;
        /* Use flexbox for better alignment */
        justify-content: center;
        /* Center the pagination */
        align-items: center;
        /* Align items vertically in the center */
    }

    .pagination li {
        list-style: none;
        /* Remove default list styling */
        margin: 0 5px;
        /* Space between buttons */
    }

    .pagination li a {

        text-decoration: none;
        /* Remove underline from links */

        padding: 1px 7px;
        /* Add padding for better click area */
        font-size: 14px;
        /* Set a larger font size */
        border: 1px solid #007bff;
        /* Border for buttons */
        border-radius: 4px;
        /* Rounded corners */
        color: #007bff;
        /* Text color for links */
        background-color: white;
        /* Background color */
        line-height: 1.5;
        /* Adjust line height for vertical centering */
        display: inline-block;
        /* Ensure the link behaves as a block */
        transition: background-color 0.3s, color 0.3s;
        /* Smooth transitions */
    }

    .pagination li a:hover {
        background-color: #007bff;
        /* Change background on hover */
        color: white;
        /* Change text color on hover */
    }

    /* Optional: Highlight the active page */
    .pagination li.active a {
        background-color: #007bff;
        /* Highlight active page */
        color: white;
        /* Change text color for active page */
    }

    .table {
        padding: 0;
        /* Reduce table padding */

    }

    .table th,
    .table tr {
        padding: 3px;
        /* Adjust padding for table cells */
    }

    .table td,
    .table tr {
        padding: 7px;
    }

    .action-buttons a {
        margin: 0 4px;
        /* Space out the buttons */
        padding: 4px 8px;
        /* Adjust button padding */
        text-decoration: none;
        /* Remove underline from buttons */
        color: #fff;
        /* Ensure text color is white */
    }

    .action-buttons .btn-primary {
        font-size: 0.875rem;
        /* Adjust button font size */
    }

    table .theading {
        text-align: center;
        padding: 20px;
    }

    .button-container {
        margin: 0;
        /* Remove default margin */
    }
</style>


<style>
    @*.table{text-align:center;margin:0auto;@*border-radius:15pxsolid!important;*@

    body {
        height: 100%;
        margin: 0;

        justify-content: center;
        /* Horizontal centering */
        align-items: center;
        /* Vertical centering */
        text-align: center;
        /* Centers text and table content */
    }

    .button-container {
        text-align: right;
        /* Align buttons to the right */
        margin-right: 25px;
        /* Optional margin to add space from the right */
    }

    .table-row {
        text-align: center;
    }

    .table-row {
        cursor: pointer;
    }
</style>

<h1>Application Details </h1>

<!-- Search Input -->
<div class="search-button-container">
    <div class="search-container">
        <input type="text" id="searchInput" class="form-control" placeholder="Search ..." />
    </div>
    <p class="button-container">
        <a class="btn btn-primary" asp-action="Create">Create New</a>
        <a class="btn btn-success" asp-action="ExportToExcel">Export to Excel</a>
    </p>
</div>

<div id="applicationdetailsTablePlaceholder">
    @await Html.PartialAsync("_ApplicationDetailsTablePartial", Model) <!-- Initial data load -->
</div>



@section Scripts {
    <script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>



    <script>
        $(document).ready(function () {
        @if (TempData["InfoMessage"] != null)
        {
            <text>
                        $('#infoModal').modal('show');
            </text>
        }
                $('.table-row').dblclick(function () {
                    var id = $(this).data('id'); // Get the ID from the data attribute

                    // AJAX call to fetch details
                    $.ajax({
                        url: '@Url.Action("Details", "ApplicationDetails")/' + id,
                        type: 'GET',
                        success: function (data) {
                            // Load the fetched data into the modal's body
                            $('#detailsModal .modal-body').html(data);
                            // Show the modal
                            $('#detailsModal').modal('show');
                        },
                        error: function () {
                            $('#detailsModal .modal-body').html('<p>Error loading details.</p>');
                            $('#detailsModal').modal('show');
                        }
                    });
                });
            // Check if there is a success message
            var successMessage = '@TempData["SuccessMessage"]';
            if (successMessage) {
                $("#successModal").modal("show");
            }
            // Real-time filtering of table rows
             $('#searchInput').on('input', function () {
                let searchTerm = $(this).val();
                $.ajax({
                    url: '@Url.Action("Index", "Clients")',
                    data: { searchTerm: searchTerm },
                    success: function (data) {
                        $('#applicationdetailsTablePlaceholder').html(data);
                    }
                });
            });
           
        });
    </script>
}